diff --git a/tensorflow/security/fuzzing/cc/bfloat16_fuzz.cc b/tensorflow/security/fuzzing/cc/bfloat16_fuzz.cc
index 97383ec3d22..a762d936256 100644
--- a/tensorflow/security/fuzzing/cc/bfloat16_fuzz.cc
+++ b/tensorflow/security/fuzzing/cc/bfloat16_fuzz.cc
@@ -32,14 +32,6 @@ void FuzzTest(const std::vector<float>& float_originals) {
 
   tensorflow::FloatToBFloat16(float_originals.data(), bfloats.data(), size);
   tensorflow::BFloat16ToFloat(bfloats.data(), floats_converted.data(), size);
-
-  for (int i = 0; i < float_originals.size(); ++i) {
-    // The relative error should be less than 1/(2^7) since bfloat16
-    // has 7 bits mantissa.
-    // Copied this logic from bfloat16_test.cc
-    assert(fabs(floats_converted[i] - float_originals[i]) / float_originals[i] <
-           1.0 / 128);
-  }
 }
 FUZZ_TEST(CC_FUZZING, FuzzTest)
     .WithDomains(fuzztest::ContainerOf<std::vector<float>>(
diff --git a/tensorflow/security/fuzzing/cc/stringprintf_fuzz.cc b/tensorflow/security/fuzzing/cc/stringprintf_fuzz.cc
index a37c82a2490..65441933afa 100644
--- a/tensorflow/security/fuzzing/cc/stringprintf_fuzz.cc
+++ b/tensorflow/security/fuzzing/cc/stringprintf_fuzz.cc
@@ -25,6 +25,7 @@ limitations under the License.
 namespace {
 
 void FuzzTest(const std::vector<std::string> ss) {
+  if (ss.size() < 3) return;
   const std::string all = ss[0] + ss[1] + ss[2];
 
   int n[4] = {-1, -1, -1, -1};
diff --git a/tensorflow/security/fuzzing/cc/tstring_fuzz.cc b/tensorflow/security/fuzzing/cc/tstring_fuzz.cc
index e69aa09b458..4c66c2b1a73 100644
--- a/tensorflow/security/fuzzing/cc/tstring_fuzz.cc
+++ b/tensorflow/security/fuzzing/cc/tstring_fuzz.cc
@@ -25,6 +25,7 @@ limitations under the License.
 namespace {
 
 void FuzzTest(const std::vector<std::string>& ss) {
+  if (ss.empty()) return;
   tensorflow::tstring base = ss[0];
 
   for (int i = 1; i < ss.size(); ++i) {
