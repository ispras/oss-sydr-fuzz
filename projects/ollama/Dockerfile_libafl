# Copyright 2025 ISP RAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

ARG BASE_IMAGE="sydr/ubuntu22.04-sydr-fuzz"
FROM $BASE_IMAGE

ARG SYDR_ARCHIVE="./sydr.zip"

WORKDIR /

# Clone Ollama.
RUN git clone https://github.com/ollama/ollama.git /ollama

WORKDIR /ollama

RUN git checkout 05a43e078a89247dcc71c703c1bee2af97c1655d

RUN sed -i '270ipanic("reached TP")' /ollama/convert/tokenizer.go
RUN sed -i '273ipanic("reached TP")' /ollama/convert/tokenizer.go
RUN sed -i '276ipanic("reached TP")' /ollama/convert/tokenizer.go
RUN sed -i '300ipanic("reached TP")' /ollama/convert/tokenizer.go

RUN sed -i '47ipanic("reached TP")' /ollama/convert/tokenizer_spm.go
RUN sed -i '50ipanic("reached TP")' /ollama/convert/tokenizer_spm.go
RUN sed -i '96ipanic("reached TP")' /ollama/convert/tokenizer_spm.go

RUN sed -i '106ipanic("reached TP")' /ollama/harmony/harmonyparser.go
RUN sed -i '199ipanic("reached TP")' /ollama/harmony/harmonyparser.go
RUN sed -i '214ipanic("reached TP")' /ollama/harmony/harmonyparser.go
RUN sed -i '224ipanic("reached TP")' /ollama/harmony/harmonyparser.go
RUN sed -i '232ipanic("reached TP")' /ollama/harmony/harmonyparser.go

RUN sed -i '396ipanic("reached TP")' /ollama/parser/parser.go
RUN sed -i '407ipanic("reached TP")' /ollama/parser/parser.go
RUN sed -i '432ipanic("reached TP")' /ollama/parser/parser.go
RUN sed -i '444ipanic("reached TP")' /ollama/parser/parser.go
RUN sed -i '479ipanic("reached TP")' /ollama/parser/parser.go

RUN sed -i '75ipanic("reached TP")' /ollama/server/manifest.go
RUN sed -i '90ipanic("reached TP")' /ollama/server/manifest.go
RUN sed -i '96ipanic("reached TP")' /ollama/server/manifest.go

RUN sed -i '118ipanic("reached TP")' /ollama/model/wordpiece.go
RUN sed -i '145ipanic("reached TP")' /ollama/model/wordpiece.go

RUN sed -i '72ipanic("reached TP")' /ollama/model/vocabulary.go
RUN sed -i '81ipanic("reached TP")' /ollama/model/vocabulary.go

# Apply patch.
COPY ollama.patch build.sh ./
RUN git apply ollama.patch

# Extract corpuses.
COPY corpus.zip /
RUN unzip /corpus.zip -d /

# Create directories for fuzz targets.
RUN mkdir sydr && cd sydr && mkdir -p convert/tokenizer convert/vocabulary \
    parser/parsefile server/manifest harmony/parser wordpiece/encode

# Move fuzz targets.
RUN mkdir fuzz
COPY fuzz.go fuzz

COPY server_manifest_sydr.go sydr/server/manifest/main.go
COPY parser_parsefile_sydr.go sydr/parser/parsefile/main.go
COPY convert_tokenizer_sydr.go sydr/convert/tokenizer/main.go
COPY convert_vocabulary_sydr.go sydr/convert/vocabulary/main.go
COPY harmony_parser_sydr.go sydr/harmony/parser/main.go
COPY wordpiece_sydr.go sydr/wordpiece/encode/main.go

# Build GGML.
RUN mkdir -p build && cd build && \
    CC=clang-18 CXX=clang++-18 cmake --preset 'CPU' -DGGML_AVX_VNNI=OFF .. && \
    make -j

# Copy LibAFL-DiFuzz target template.
COPY directed_target /directed_target

WORKDIR /directed_target

# Build image for LibAFL-DiFuzz.
ADD ${SYDR_ARCHIVE} ./
RUN unzip -o ${SYDR_ARCHIVE} && rm ${SYDR_ARCHIVE}
RUN OUT_DIR=/ cargo make all

WORKDIR /
