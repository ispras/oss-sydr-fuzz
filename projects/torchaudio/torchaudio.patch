diff --git a/cmake/TorchAudioHelper.cmake b/cmake/TorchAudioHelper.cmake
index acbbef45..abadf82f 100644
--- a/cmake/TorchAudioHelper.cmake
+++ b/cmake/TorchAudioHelper.cmake
@@ -1,21 +1,7 @@
 find_package(Torch REQUIRED)
 
-# Remove stray mkl dependency found in Intel mac.
-#
-# For Intel mac, torch_cpu has caffe2::mkl, which adds link flags like
-# -lmkl_intel_ilp64, -lmkl_core and -lmkl_intel_thread.
-# Even though TorchAudio does not call any of MKL functions directly,
-# Apple's linker does not drop them, instead it bakes these dependencies
-# Therefore, we remove it.
-# See https://github.com/pytorch/audio/pull/3307
-get_target_property(dep torch_cpu INTERFACE_LINK_LIBRARIES)
-if ("caffe2::mkl" IN_LIST dep)
-  list(REMOVE_ITEM dep "caffe2::mkl")
-  set_target_properties(torch_cpu PROPERTIES INTERFACE_LINK_LIBRARIES "${dep}")
-endif()
-
 function (torchaudio_library name source include_dirs link_libraries compile_defs)
-  add_library(${name} SHARED ${source})
+  add_library(${name} STATIC ${source})
   target_include_directories(${name} PRIVATE "${PROJECT_SOURCE_DIR};${include_dirs}")
   target_link_libraries(${name} ${link_libraries})
   target_compile_definitions(${name} PRIVATE ${compile_defs})
@@ -40,7 +26,7 @@ if (BUILD_TORCHAUDIO_PYTHON_EXTENSION)
     set(ADDITIONAL_ITEMS Python3::Python)
   endif()
   function(torchaudio_extension name sources include_dirs libraries definitions)
-    add_library(${name} SHARED ${sources})
+    add_library(${name} STATIC ${sources})
     target_compile_definitions(${name} PRIVATE "${definitions}")
     target_include_directories(
       ${name}
diff --git a/torchaudio/csrc/CMakeLists.txt b/torchaudio/csrc/CMakeLists.txt
index fc0c5494..33f33e8e 100644
--- a/torchaudio/csrc/CMakeLists.txt
+++ b/torchaudio/csrc/CMakeLists.txt
@@ -118,3 +118,21 @@ if (BUILD_TORCHAUDIO_PYTHON_EXTENSION)
     ""
     )
 endif()
+
+include_directories(${CMAKE_SOURCE_DIR})
+include_directories(${CMAKE_SOURCE_DIR}/torchaudio/csrc/sox)
+include_directories(${CMAKE_SOURCE_DIR}/third_party/install/include)
+
+set(FUZZ_TARGETS
+  load_audio
+)
+
+foreach(FUZZ_TARGET IN LISTS FUZZ_TARGETS)
+  add_executable(${FUZZ_TARGET}_${SUFFIX} ${CMAKE_SOURCE_DIR}/${FUZZ_TARGET}.cc)
+  target_link_libraries(${FUZZ_TARGET}_${SUFFIX} PRIVATE
+    libtorchaudio_sox ${TORCH_LIBRARIES}
+    ${CMAKE_DL_LIBS} pthread rt ${ENGINE})
+  add_dependencies(${FUZZ_TARGET}_${SUFFIX} libtorchaudio_sox)
+  set_target_properties(${FUZZ_TARGET}_${SUFFIX} PROPERTIES BUILD_WITH_INSTALL_RPATH ON)
+  install(TARGETS ${FUZZ_TARGET}_${SUFFIX} DESTINATION /)
+endforeach()
